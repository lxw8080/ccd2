version: '3.8'

services:
  # Redis服务 - 项目依赖
  redis:
    image: redis:7-alpine
    container_name: ccd2-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - ccd2-network

  # 应用服务 - 包含前端和后端
  app:
    image: ccd2-app:latest
    container_name: ccd2-app
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      # 数据库配置 - 使用外部数据库
      DATABASE_URL: ${DATABASE_URL:-postgresql://flask_user:flask_password@115.190.29.10:5433/ccd_db_new}
      
      # Redis配置 - 使用容器内的Redis服务
      REDIS_URL: redis://redis:6379/0
      
      # 安全配置
      SECRET_KEY: ${SECRET_KEY:-please-change-this-secret-key-in-production}
      ALGORITHM: ${ALGORITHM:-HS256}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      
      # 存储配置
      STORAGE_TYPE: ${STORAGE_TYPE:-local}
      UPLOAD_DIR: /app/uploads
      
      # 日志配置
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
    volumes:
      - app-uploads:/app/uploads
      - app-logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - ccd2-network

# 数据卷
volumes:
  redis-data:
    driver: local
  app-uploads:
    driver: local
  app-logs:
    driver: local

# 网络
networks:
  ccd2-network:
    driver: bridge

